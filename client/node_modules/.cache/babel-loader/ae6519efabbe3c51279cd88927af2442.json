{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ludot\\\\OneDrive\\\\Bureau\\\\Wordlet-Server\\\\client\\\\src\\\\components\\\\WordToken.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../providers/AuthProvider\";\nimport { useUser } from \"../providers/UserProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WordToken = props => {\n  _s();\n\n  const {\n    user\n  } = useAuth();\n  const {\n    getTokenData,\n    transferWordToken,\n    buyWordtoken,\n    listTokenForSale,\n    removeTokenFromSale,\n    getTokenPrice\n  } = useUser();\n  const [tokenData, setTokenData] = useState({});\n  const [display, setDisplay] = useState(false);\n  const [tokenPrice, setTokenPrice] = useState(null);\n  useEffect(() => {\n    getTokenData(setTokenData, props.tokenId);\n    getTokenPrice(props.seller ? props.seller : user === null || user === void 0 ? void 0 : user.addr, props.tokenId, setTokenPrice);\n  }, [display]);\n\n  if (!display) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDisplay(true),\n        children: [\"WordToken #\", props.tokenId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [tokenData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mot: \", tokenData[\"mot\"]]\n      }, \"mot\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Token #\", props.tokenId]\n      }, \"tokenId\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type: \", tokenData[\"type\"]]\n      }, \"type\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Source: \", tokenData[\"source\"]]\n      }, \"source\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), \" \", props.collection && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Receiver address : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"ReceiverAddr\",\n          placeholder: \"Entrez un destinataire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => transferWordToken(document.getElementById(\"ReceiverAddr\").value, props.tokenId),\n          children: \"Transfer Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Prix : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"price\",\n          placeholder: \"Entrez un prix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => listTokenForSale(props.tokenId, document.getElementById(\"price\").value),\n          children: \"Vendre le token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), \" \", props.market && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [tokenPrice, \" WOT\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Seller: \", props.seller]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => buyWordtoken(props.tokenId, props.seller),\n          children: \"Acheter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), \" \", props.forSale && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Prix : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [tokenPrice, \" WOT\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-primary\",\n          onClick: () => removeTokenFromSale(props.tokenId),\n          children: \"Retirer de la vente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDisplay(false),\n        children: \"Clear Token Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, props.tokenId, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WordToken, \"jS/J7oF+vjBh5Di2ePh1K2HG6i0=\", false, function () {\n  return [useAuth, useUser];\n});\n\n_c = WordToken;\nexport default WordToken;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordToken\");","map":{"version":3,"sources":["C:/Users/ludot/OneDrive/Bureau/Wordlet-Server/client/src/components/WordToken.js"],"names":["React","useState","useEffect","useAuth","useUser","WordToken","props","user","getTokenData","transferWordToken","buyWordtoken","listTokenForSale","removeTokenFromSale","getTokenPrice","tokenData","setTokenData","display","setDisplay","tokenPrice","setTokenPrice","tokenId","seller","addr","collection","document","getElementById","value","market","forSale"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../providers/AuthProvider\";\r\n\r\nimport { useUser } from \"../providers/UserProvider\";\r\n\r\nconst WordToken = (props) => {\r\n    const { user } = useAuth( )\r\n    const { getTokenData, transferWordToken, buyWordtoken, listTokenForSale, removeTokenFromSale, getTokenPrice } = useUser( )\r\n    const [tokenData, setTokenData] = useState({})\r\n    const [display, setDisplay] = useState(false)\r\n    const [tokenPrice, setTokenPrice] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        getTokenData(setTokenData, props.tokenId)\r\n        getTokenPrice(props.seller?props.seller:user?.addr, props.tokenId, setTokenPrice)\r\n    }, [ display ])\r\n\r\n    if(!display){\r\n        return (\r\n            <div >\r\n                <button  onClick={() =>setDisplay(true)}>WordToken #{props.tokenId}</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\" key={props.tokenId}>\r\n            {tokenData &&\r\n            <div>\r\n                <p key=\"mot\">Mot: {tokenData[\"mot\"]}</p>\r\n                <p key=\"tokenId\">Token #{props.tokenId}</p>\r\n                <p key=\"type\">Type: {tokenData[\"type\"]}</p>\r\n                <p key=\"source\">Source: {tokenData[\"source\"]}</p>\r\n            </div>\r\n            } {props.collection &&\r\n            <>\r\n            <div>\r\n                <label>Receiver address : </label>\r\n                <input type=\"text\" id=\"ReceiverAddr\" placeholder=\"Entrez un destinataire\"/>\r\n                <button onClick={() => transferWordToken(document.getElementById(\"ReceiverAddr\").value, props.tokenId)}>Transfer Token</button> \r\n            </div>\r\n            <div>\r\n                <label>Prix : </label>\r\n                <input type=\"text\" id=\"price\" placeholder=\"Entrez un prix\"/>\r\n                <button  onClick={() => listTokenForSale(props.tokenId, document.getElementById(\"price\").value)}>Vendre le token</button> \r\n            </div>\r\n            </>\r\n            } {props.market &&\r\n            <>\r\n            <div>\r\n                <h4>Price</h4>\r\n                <p>{tokenPrice} WOT</p>\r\n            </div>\r\n            <div>\r\n                <p>Seller: {props.seller}</p>\r\n                <button onClick={() => buyWordtoken(props.tokenId, props.seller)}>Acheter</button>\r\n            </div>\r\n            </>\r\n            } {props.forSale &&\r\n            <>\r\n            <div>\r\n                <label>Prix : </label>\r\n                <p>{tokenPrice} WOT</p>\r\n                <button className=\"btn-primary\" onClick={() => removeTokenFromSale(props.tokenId)}>Retirer de la vente</button> \r\n            </div>\r\n            </>\r\n\r\n        }\r\n            <div>\r\n                <button onClick={() => setDisplay(false)}>Clear Token Info</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WordToken;"]},"metadata":{},"sourceType":"module"}