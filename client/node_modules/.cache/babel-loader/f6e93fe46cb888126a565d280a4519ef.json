{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { query, mutate, tx } from '@onflow/fcl';\nimport { GET_WOT_BALANCE } from '../cadence/get-wot-balance.script';\nimport { CREATE_WOT_VAULT } from '../cadence/create-wot-vault.tx';\nexport default function useWOT(user) {\n  _s();\n\n  const [WOTBalance, setWOTBalance] = useState(null);\n  useEffect(() => getWOTBalance(), [user]);\n\n  const getWOTBalance = async () => {\n    if (user) {\n      try {\n        await query({\n          cadence: GET_WOT_BALANCE,\n          args: (arg, t) => [arg(user === null || user === void 0 ? void 0 : user.addr, t.Address)]\n        }).then(function (data) {\n          setWOTBalance(JSON.parse(data));\n        });\n      } catch (error) {\n        console.debug(\"Impossible de récupérer le solde de WOT de l'utilisateur\");\n        console.error(error);\n      }\n    }\n  };\n\n  const createWOTVault = async () => {\n    try {\n      let transaction = await mutate({\n        cadence: CREATE_WOT_VAULT,\n        limit: 100\n      });\n      console.log(\"TxID : \" + transaction);\n      await tx(transaction).onceSealed();\n      console.log(\"Transaction Effectuée\");\n    } catch (error) {\n      console.log(\"Transaction Echouée\");\n      console.error(error);\n    }\n  };\n\n  return {\n    WOTBalance,\n    getWOTBalance,\n    createWOTVault\n  };\n}\n\n_s(useWOT, \"H0R6zZvFxiUKtgBfEocD4MRwFG4=\");","map":{"version":3,"sources":["C:/Users/ludot/OneDrive/Bureau/Wordlet-Server/client/src/hooks/use-wot.hook.js"],"names":["useEffect","useState","query","mutate","tx","GET_WOT_BALANCE","CREATE_WOT_VAULT","useWOT","user","WOTBalance","setWOTBalance","getWOTBalance","cadence","args","arg","t","addr","Address","then","data","JSON","parse","error","console","debug","createWOTVault","transaction","limit","log","onceSealed"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,EAAxB,QAAkC,aAAlC;AAEA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,eAAe,SAASC,MAAT,CAAiBC,IAAjB,EAAwB;AAAA;;AACnC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,IAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAE,MAAMW,aAAa,EAArB,EAAyB,CAAEH,IAAF,CAAzB,CAAT;;AAEA,QAAMG,aAAa,GAAG,YAAY;AAC9B,QAAGH,IAAH,EAAQ;AACJ,UAAI;AACA,cAAMN,KAAK,CAAC;AACRU,UAAAA,OAAO,EAAEP,eADD;AAERQ,UAAAA,IAAI,EAAE,CAACC,GAAD,EAAMC,CAAN,KAAY,CACdD,GAAG,CAACN,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEQ,IAAP,EAAaD,CAAC,CAACE,OAAf,CADW;AAFV,SAAD,CAAL,CAMLC,IANK,CAMA,UAASC,IAAT,EAAe;AACjBT,UAAAA,aAAa,CAACU,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAD,CAAb;AACH,SARK,CAAN;AAUH,OAXD,CAWE,OAAOG,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAc,0DAAd;AACAD,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;AACJ,GAlBD;;AAoBA,QAAMG,cAAc,GAAG,YAAY;AAC/B,QAAI;AACA,UAAIC,WAAW,GAAG,MAAMvB,MAAM,CAAC;AAC3BS,QAAAA,OAAO,EAAEN,gBADkB;AAE3BqB,QAAAA,KAAK,EAAE;AAFoB,OAAD,CAA9B;AAIAJ,MAAAA,OAAO,CAACK,GAAR,CAAY,YAAYF,WAAxB;AACA,YAAMtB,EAAE,CAACsB,WAAD,CAAF,CAAgBG,UAAhB,EAAN;AACAN,MAAAA,OAAO,CAACK,GAAR,CAAY,uBAAZ;AACH,KARD,CAQE,OAAON,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACK,GAAR,CAAY,qBAAZ;AACAL,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ,GAbD;;AAeA,SAAO;AAAEb,IAAAA,UAAF;AAAcE,IAAAA,aAAd;AAA6Bc,IAAAA;AAA7B,GAAP;AACH;;GAzCuBlB,M","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nimport { query, mutate, tx } from '@onflow/fcl'\r\n\r\nimport { GET_WOT_BALANCE } from '../cadence/get-wot-balance.script';\r\nimport { CREATE_WOT_VAULT } from '../cadence/create-wot-vault.tx';\r\n\r\nexport default function useWOT( user ) {\r\n    const [WOTBalance, setWOTBalance] = useState(null)\r\n\r\n    useEffect( () => getWOTBalance(), [ user ])\r\n\r\n    const getWOTBalance = async () => {\r\n        if(user){\r\n            try {\r\n                await query({\r\n                    cadence: GET_WOT_BALANCE,\r\n                    args: (arg, t) => [\r\n                        arg(user?.addr, t.Address)\r\n                    ]\r\n                })\r\n                .then(function(data) {\r\n                    setWOTBalance(JSON.parse(data))\r\n                })\r\n                \r\n            } catch (error) {\r\n                console.debug(\"Impossible de récupérer le solde de WOT de l'utilisateur\")\r\n                console.error(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const createWOTVault = async () => {\r\n        try {\r\n            let transaction = await mutate({\r\n                cadence: CREATE_WOT_VAULT,\r\n                limit: 100\r\n            })\r\n            console.log(\"TxID : \" + transaction)\r\n            await tx(transaction).onceSealed()\r\n            console.log(\"Transaction Effectuée\")\r\n        } catch (error) {\r\n            console.log(\"Transaction Echouée\")\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    return { WOTBalance, getWOTBalance, createWOTVault }\r\n}"]},"metadata":{},"sourceType":"module"}