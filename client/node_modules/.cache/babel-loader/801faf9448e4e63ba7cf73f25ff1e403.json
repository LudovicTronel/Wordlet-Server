{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ludot\\\\OneDrive\\\\Bureau\\\\Wordlet-Server\\\\client\\\\src\\\\providers\\\\UserProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext } from \"react\";\nimport { useAuth } from \"./AuthProvider\";\nimport useWOT from \"../hooks/use-wot.hook\";\nimport useWordTokens from \"../hooks/use-wordtokens.hook\";\nimport useUserWordTokens from \"../hooks/use-user-wordtokens.hook\";\nimport useMarket from \"../hooks/use-market.hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport default function UserProvider({\n  children\n}) {\n  _s();\n\n  const {\n    user\n  } = useAuth();\n  const {\n    WOTBalance,\n    getWOTBalance,\n    createWOTVault\n  } = useWOT(user);\n  const {\n    getTokenData,\n    transferWordToken\n  } = useWordTokens();\n  const {\n    userWordTokens,\n    getUserWordTokens\n  } = useUserWordTokens(user);\n  const {\n    userSalelist,\n    getCurrentUserSalelist,\n    buyWordtoken,\n    listTokenForSale,\n    removeTokenFromSale,\n    getTokenPrice,\n    marketListings,\n    getMarketListings,\n    addToSellerCatalog,\n    removeFromSellerCatalog,\n    userIsSeller\n  } = useMarket(user);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      WOTBalance,\n      getWOTBalance,\n      createWOTVault,\n      userWordTokens,\n      getUserWordTokens,\n      getTokenData,\n      userSalelist,\n      getCurrentUserSalelist,\n      transferWordToken,\n      buyWordtoken,\n      listTokenForSale,\n      removeTokenFromSale,\n      getTokenPrice,\n      marketListings,\n      getMarketListings,\n      addToSellerCatalog,\n      removeFromSellerCatalog,\n      userIsSeller\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserProvider, \"cuyFUEOa7xkDUpky4tvmm1ud0PQ=\", false, function () {\n  return [useAuth, useWOT, useWordTokens, useUserWordTokens, useMarket];\n});\n\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n\n  return useContext(UserContext);\n};\n\n_s2(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["C:/Users/ludot/OneDrive/Bureau/Wordlet-Server/client/src/providers/UserProvider.js"],"names":["React","createContext","useContext","useAuth","useWOT","useWordTokens","useUserWordTokens","useMarket","UserContext","UserProvider","children","user","WOTBalance","getWOTBalance","createWOTVault","getTokenData","transferWordToken","userWordTokens","getUserWordTokens","userSalelist","getCurrentUserSalelist","buyWordtoken","listTokenForSale","removeTokenFromSale","getTokenPrice","marketListings","getMarketListings","addToSellerCatalog","removeFromSellerCatalog","userIsSeller","useUser"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,MAAMC,WAAW,gBAAGP,aAAa,EAAjC;AAEA,eAAe,SAASQ,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAWR,OAAO,EAAxB;AACA,QAAM;AAAES,IAAAA,UAAF;AAAcC,IAAAA,aAAd;AAA6BC,IAAAA;AAA7B,MAAgDV,MAAM,CAAEO,IAAF,CAA5D;AACA,QAAM;AAAEI,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAsCX,aAAa,EAAzD;AACA,QAAM;AAAEY,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAwCZ,iBAAiB,CAAEK,IAAF,CAA/D;AACA,QAAM;AAAEQ,IAAAA,YAAF;AAAgBC,IAAAA,sBAAhB;AAAwCC,IAAAA,YAAxC;AAAsDC,IAAAA,gBAAtD;AAAwEC,IAAAA,mBAAxE;AAA6FC,IAAAA,aAA7F;AAA4GC,IAAAA,cAA5G;AAA4HC,IAAAA,iBAA5H;AAA+IC,IAAAA,kBAA/I;AAAmKC,IAAAA,uBAAnK;AAA4LC,IAAAA;AAA5L,MAA4MtB,SAAS,CAAEI,IAAF,CAA3N;AAGA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBC,MAAAA,UADyB;AAEzBC,MAAAA,aAFyB;AAGzBC,MAAAA,cAHyB;AAIzBG,MAAAA,cAJyB;AAKzBC,MAAAA,iBALyB;AAMzBH,MAAAA,YANyB;AAOzBI,MAAAA,YAPyB;AAQzBC,MAAAA,sBARyB;AASzBJ,MAAAA,iBATyB;AAUzBK,MAAAA,YAVyB;AAWzBC,MAAAA,gBAXyB;AAYzBC,MAAAA,mBAZyB;AAazBC,MAAAA,aAbyB;AAczBC,MAAAA,cAdyB;AAezBC,MAAAA,iBAfyB;AAgBzBC,MAAAA,kBAhByB;AAiBzBC,MAAAA,uBAjByB;AAkBzBC,MAAAA;AAlByB,KAA7B;AAAA,cAqBMnB;AArBN;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GAjCuBD,Y;UACHN,O,EACqCC,M,EACVC,a,EACEC,iB,EACoKC,S;;;KAL9LE,Y;AAmCxB,OAAO,MAAMqB,OAAO,GAAG,MAAM;AAAA;;AACzB,SAAO5B,UAAU,CAACM,WAAD,CAAjB;AACH,CAFM;;IAAMsB,O","sourcesContent":["import React, { createContext, useContext } from \"react\";\r\n\r\nimport { useAuth } from \"./AuthProvider\";\r\n\r\nimport useWOT from \"../hooks/use-wot.hook\";\r\nimport useWordTokens from \"../hooks/use-wordtokens.hook\";\r\nimport useUserWordTokens from \"../hooks/use-user-wordtokens.hook\";\r\nimport useMarket from \"../hooks/use-market.hook\";\r\n\r\nconst UserContext = createContext()\r\n\r\nexport default function UserProvider({ children }) {\r\n    const { user } = useAuth()\r\n    const { WOTBalance, getWOTBalance, createWOTVault } = useWOT( user )\r\n    const { getTokenData, transferWordToken } = useWordTokens( )\r\n    const { userWordTokens, getUserWordTokens } = useUserWordTokens( user )\r\n    const { userSalelist, getCurrentUserSalelist, buyWordtoken, listTokenForSale, removeTokenFromSale, getTokenPrice, marketListings, getMarketListings, addToSellerCatalog, removeFromSellerCatalog, userIsSeller} = useMarket( user )\r\n\r\n\r\n    return (\r\n        <UserContext.Provider value={{\r\n            WOTBalance,\r\n            getWOTBalance,\r\n            createWOTVault,\r\n            userWordTokens,\r\n            getUserWordTokens,\r\n            getTokenData,\r\n            userSalelist,\r\n            getCurrentUserSalelist,\r\n            transferWordToken,\r\n            buyWordtoken,\r\n            listTokenForSale,\r\n            removeTokenFromSale,\r\n            getTokenPrice,\r\n            marketListings, \r\n            getMarketListings,\r\n            addToSellerCatalog,\r\n            removeFromSellerCatalog,\r\n            userIsSeller\r\n\r\n        }}>\r\n            { children }\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useUser = () => {\r\n    return useContext(UserContext)\r\n}"]},"metadata":{},"sourceType":"module"}