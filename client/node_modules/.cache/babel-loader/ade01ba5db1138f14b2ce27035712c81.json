{"ast":null,"code":"export const ADD_TO_SELLER_CATALOG = `\nimport WOToken, WordletContract, MarketplaceContract from 0x1f7da62a915f01c7\n\ntransaction (){\n\n    prepare(account: AuthAccount) {\n\n        //Debut de code a deplacer dans un setup global\n\n        if(account.borrow<&MarketplaceContract.SaleCollection>(from: /storage/NFTSale) == nil){\n            let receiver = account.getCapability<&{WOToken.Receiver}>(/public/MainReceiver)\n\n            account.save<@MarketplaceContract.SaleCollection>(<-MarketplaceContract.createSaleCollection(ownerVault: receiver), to: /storage/NFTSale)\n        }\n\n        if(!account.getCapability<&MarketplaceContract.SaleCollection{MarketplaceContract.SalePublic}>(/public/NFTSale).check()){\n            account.link<&MarketplaceContract.SaleCollection{MarketplaceContract.SalePublic}>(/public/NFTSale, target: /storage/NFTSale)\n        }\n\n        //Fin\n\n        let wordlet = getAccount(0x1f7da62a915f01c7)\n        let wordletCatalogRef = wordlet.getCapability<&{MarketplaceContract.SellerCatalog}>(/public/SellerCatalog)\n            .borrow()\n            ?? panic(\"Could not borrow wordlet sales catalog reference\")\n\n        wordletCatalogRef.addSeller(sellerAcct: account)\n\n    }\n}\n`;","map":{"version":3,"sources":["C:/Users/ludot/OneDrive/Bureau/Wordlet-Server/client/src/cadence/add-to-seller-catalog.tx.js"],"names":["ADD_TO_SELLER_CATALOG"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9BO","sourcesContent":["export const ADD_TO_SELLER_CATALOG = `\r\nimport WOToken, WordletContract, MarketplaceContract from 0x1f7da62a915f01c7\r\n\r\ntransaction (){\r\n\r\n    prepare(account: AuthAccount) {\r\n\r\n        //Debut de code a deplacer dans un setup global\r\n\r\n        if(account.borrow<&MarketplaceContract.SaleCollection>(from: /storage/NFTSale) == nil){\r\n            let receiver = account.getCapability<&{WOToken.Receiver}>(/public/MainReceiver)\r\n\r\n            account.save<@MarketplaceContract.SaleCollection>(<-MarketplaceContract.createSaleCollection(ownerVault: receiver), to: /storage/NFTSale)\r\n        }\r\n\r\n        if(!account.getCapability<&MarketplaceContract.SaleCollection{MarketplaceContract.SalePublic}>(/public/NFTSale).check()){\r\n            account.link<&MarketplaceContract.SaleCollection{MarketplaceContract.SalePublic}>(/public/NFTSale, target: /storage/NFTSale)\r\n        }\r\n\r\n        //Fin\r\n\r\n        let wordlet = getAccount(0x1f7da62a915f01c7)\r\n        let wordletCatalogRef = wordlet.getCapability<&{MarketplaceContract.SellerCatalog}>(/public/SellerCatalog)\r\n            .borrow()\r\n            ?? panic(\"Could not borrow wordlet sales catalog reference\")\r\n\r\n        wordletCatalogRef.addSeller(sellerAcct: account)\r\n\r\n    }\r\n}\r\n`"]},"metadata":{},"sourceType":"module"}