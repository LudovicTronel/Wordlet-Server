{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { query, mutate, tx } from '@onflow/fcl';\nimport { GET_USER_SALELIST } from \"../cadence/get-user-salelist.script\";\nimport { GET_SELLER_CATALOG } from \"../cadence/get-seller-catalog.script\";\nimport { BUY_WORDTOKEN } from \"../cadence/buy-wordtoken.tx\";\nimport { LIST_TOKEN_FOR_SALE } from \"../cadence/list-token-for-sale.tx\";\nimport { REMOVE_TOKEN_FROM_SALE } from \"../cadence/remove-token-from-sale.tx\";\nimport { GET_TOKEN_PRICE } from \"../cadence/get-token-price.script\";\nimport { GET_MARKET_LISTINGS } from \"../cadence/get-market-listings.script\";\nimport { REMOVE_FROM_SELLER_CATALOG } from \"../cadence/remove-from-seller-catalog.tx\";\nimport { ADD_TO_SELLER_CATALOG } from \"../cadence/add-to-seller-catalog.tx\";\nexport default function useMarketHook(user) {\n  _s();\n\n  const [userSalelist, setUserSalelist] = useState(null);\n  const [sellerCatalog, setSellerCatalog] = useState([]);\n  const [marketListings, setMarketListings] = useState([]);\n  const [userIsSeller, setUserIsSeller] = useState(null);\n  useEffect(() => {\n    getCurrentUserSalelist();\n    getSellerCatalog();\n    getMarketListings();\n    setUserIsSeller(sellerCatalog.includes(user === null || user === void 0 ? void 0 : user.addr));\n  }, [user]);\n\n  const getCurrentUserSalelist = async () => {\n    try {\n      await query({\n        cadence: GET_USER_SALELIST,\n        args: (arg, t) => [arg(user === null || user === void 0 ? void 0 : user.addr, t.Address)]\n      }).then(function (data) {\n        setUserSalelist(data);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getSellerCatalog = async () => {\n    try {\n      await query({\n        cadence: GET_SELLER_CATALOG\n      }).then(function (data) {\n        setSellerCatalog(data);\n        setUserIsSeller(sellerCatalog.includes(user === null || user === void 0 ? void 0 : user.addr));\n        getMarketListings();\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getMarketListings = async () => {\n    try {\n      await query({\n        cadence: GET_MARKET_LISTINGS,\n        args: (arg, t) => []\n      }).then(function (data) {\n        // This is the power of StackOverflow !!!\n        setMarketListings(Object.entries(data).map(e => ({\n          \"id\": parseInt(e[0]),\n          \"seller\": e[1]\n        })));\n      });\n    } catch (error) {\n      console.debug(\"getMarketListings Failed\");\n      console.error(error);\n    }\n  };\n\n  const getTokenPrice = async (address, tokenId, setTokenPrice) => {\n    try {\n      await query({\n        cadence: GET_TOKEN_PRICE,\n        args: (arg, t) => [arg(address, t.Address), arg(tokenId, t.UInt64)]\n      }).then(function (data) {\n        setTokenPrice(data);\n      });\n    } catch (error) {\n      console.debug(\"getTokenPrice Failed\");\n      console.error(error);\n    }\n  };\n\n  const buyWordtoken = async (tokenId, address) => {\n    try {\n      let transaction = await mutate({\n        cadence: BUY_WORDTOKEN,\n        limit: 100,\n        args: (arg, t) => [arg(tokenId, t.UInt64), arg(address, t.Address)]\n      });\n      console.log(\"TxID : \" + transaction);\n      await tx(transaction).onceSealed();\n      console.log(\"Transaction Effectuée\");\n    } catch (error) {\n      console.log(\"Transaction Echouée\");\n      console.error(error);\n    }\n  };\n\n  const removeTokenFromSale = async tokenId => {\n    try {\n      let transaction = await mutate({\n        cadence: REMOVE_TOKEN_FROM_SALE,\n        limit: 100,\n        args: (arg, t) => [arg(tokenId, t.UInt64)]\n      });\n      console.log(\"TxID : \" + transaction);\n      await tx(transaction).onceSealed();\n      console.log(\"Transaction Effectuée\");\n    } catch (error) {\n      console.log(\"Transaction Echouée\");\n      console.error(error);\n    }\n  };\n\n  const listTokenForSale = async (tokenId, price) => {\n    // pasage d'argument entiers pose problème ajoute une décimale null si c'est le cas\n    if (price % 1 == 0) price += \".0\";\n\n    try {\n      let transaction = await mutate({\n        cadence: LIST_TOKEN_FOR_SALE,\n        limit: 100,\n        args: (arg, t) => [arg(tokenId, t.UInt64), arg(price, t.UFix64)]\n      });\n      console.log(\"TxID : \" + transaction);\n      await tx(transaction).onceSealed();\n      console.log(\"Transaction Effectuée\");\n    } catch (error) {\n      console.log(\"Transaction Echouée\");\n      console.error(error);\n    }\n  };\n\n  const addToSellerCatalog = async () => {\n    try {\n      let transaction = await mutate({\n        cadence: ADD_TO_SELLER_CATALOG,\n        limit: 100,\n        args: (arg, t) => []\n      });\n      console.log(\"TxID : \" + transaction);\n      await tx(transaction).onceSealed();\n      console.log(\"Transaction Effectuée\");\n    } catch (error) {\n      console.log(\"Transaction Echouée\");\n      console.error(error);\n    }\n  };\n\n  const removeFromSellerCatalog = async () => {\n    try {\n      let transaction = await mutate({\n        cadence: REMOVE_FROM_SELLER_CATALOG,\n        limit: 100,\n        args: (arg, t) => []\n      });\n      console.log(\"TxID : \" + transaction);\n      await tx(transaction).onceSealed();\n      console.log(\"Transaction Effectuée\");\n    } catch (error) {\n      console.log(\"Transaction Echouée\");\n      console.error(error);\n    }\n  };\n\n  return {\n    userSalelist,\n    sellerCatalog,\n    marketListings,\n    userIsSeller,\n    getCurrentUserSalelist,\n    setSellerCatalog,\n    listTokenForSale,\n    buyWordtoken,\n    removeTokenFromSale,\n    getTokenPrice,\n    getMarketListings,\n    addToSellerCatalog,\n    removeFromSellerCatalog\n  };\n}\n\n_s(useMarketHook, \"Th1JvTRyjk4A71YwsSAk6vKCSLM=\");","map":{"version":3,"sources":["C:/Users/ludot/OneDrive/Bureau/Wordlet-Server/client/src/hooks/use-market.hook.js"],"names":["useEffect","useState","query","mutate","tx","GET_USER_SALELIST","GET_SELLER_CATALOG","BUY_WORDTOKEN","LIST_TOKEN_FOR_SALE","REMOVE_TOKEN_FROM_SALE","GET_TOKEN_PRICE","GET_MARKET_LISTINGS","REMOVE_FROM_SELLER_CATALOG","ADD_TO_SELLER_CATALOG","useMarketHook","user","userSalelist","setUserSalelist","sellerCatalog","setSellerCatalog","marketListings","setMarketListings","userIsSeller","setUserIsSeller","getCurrentUserSalelist","getSellerCatalog","getMarketListings","includes","addr","cadence","args","arg","t","Address","then","data","error","console","Object","entries","map","e","parseInt","debug","getTokenPrice","address","tokenId","setTokenPrice","UInt64","buyWordtoken","transaction","limit","log","onceSealed","removeTokenFromSale","listTokenForSale","price","UFix64","addToSellerCatalog","removeFromSellerCatalog"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport { query, mutate, tx } from '@onflow/fcl'\r\nimport { GET_USER_SALELIST } from \"../cadence/get-user-salelist.script\";\r\nimport { GET_SELLER_CATALOG } from \"../cadence/get-seller-catalog.script\";\r\nimport { BUY_WORDTOKEN } from \"../cadence/buy-wordtoken.tx\";\r\nimport { LIST_TOKEN_FOR_SALE } from \"../cadence/list-token-for-sale.tx\";\r\nimport { REMOVE_TOKEN_FROM_SALE } from \"../cadence/remove-token-from-sale.tx\";\r\nimport { GET_TOKEN_PRICE } from \"../cadence/get-token-price.script\";\r\nimport { GET_MARKET_LISTINGS } from \"../cadence/get-market-listings.script\";\r\nimport { REMOVE_FROM_SELLER_CATALOG } from \"../cadence/remove-from-seller-catalog.tx\";\r\nimport { ADD_TO_SELLER_CATALOG } from \"../cadence/add-to-seller-catalog.tx\";\r\n\r\nexport default function useMarketHook( user ) {\r\n    const [ userSalelist, setUserSalelist ] = useState(null)\r\n    const [ sellerCatalog, setSellerCatalog ] = useState([])\r\n    const [ marketListings, setMarketListings] = useState([])\r\n    const [ userIsSeller, setUserIsSeller ] = useState(null)\r\n\r\n    useEffect( () => {\r\n        getCurrentUserSalelist()\r\n        getSellerCatalog()\r\n        getMarketListings()\r\n        setUserIsSeller(sellerCatalog.includes(user?.addr))\r\n    }, [ user ] )\r\n    \r\n    const getCurrentUserSalelist = async () => {\r\n        try {\r\n            await query({\r\n                cadence: GET_USER_SALELIST,\r\n                args: (arg, t) => [\r\n                    arg(user?.addr, t.Address)\r\n                ]\r\n            })\r\n            .then(function(data) {\r\n                setUserSalelist(data)\r\n            })\r\n            \r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const getSellerCatalog = async () => {\r\n        try {\r\n            await query({\r\n                cadence: GET_SELLER_CATALOG\r\n            })\r\n            .then(function(data) {\r\n                setSellerCatalog(data)\r\n                setUserIsSeller(sellerCatalog.includes(user?.addr))\r\n                getMarketListings()\r\n            })\r\n            \r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const getMarketListings = async()=>{\r\n        try {\r\n            await query({\r\n                cadence: GET_MARKET_LISTINGS,\r\n                args: (arg, t) => []\r\n            })\r\n            .then(function(data) {\r\n                // This is the power of StackOverflow !!!\r\n                setMarketListings(Object.entries(data).map((e) => ( { \"id\": parseInt(e[0]), \"seller\": e[1]} )) );\r\n            })\r\n        } catch (error) {\r\n            console.debug(\"getMarketListings Failed\")\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const getTokenPrice = async(address, tokenId, setTokenPrice)=>{\r\n        try {\r\n            await query({\r\n                cadence: GET_TOKEN_PRICE,\r\n                args: (arg, t) => [\r\n                    arg(address, t.Address),\r\n                    arg(tokenId, t.UInt64)\r\n                ]\r\n            })\r\n            .then(function(data) {\r\n                setTokenPrice(data)\r\n            })\r\n        } catch (error) {\r\n            console.debug(\"getTokenPrice Failed\")\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const buyWordtoken = async(tokenId, address)=>{\r\n        try {\r\n            let transaction = await mutate({\r\n                cadence: BUY_WORDTOKEN,\r\n                limit: 100,\r\n                args: (arg, t) => [\r\n                    arg(tokenId, t.UInt64),\r\n                    arg(address, t.Address)\r\n                ]\r\n            })\r\n            console.log(\"TxID : \" + transaction)\r\n            await tx(transaction).onceSealed()\r\n            console.log(\"Transaction Effectuée\")\r\n        } catch (error) {\r\n            console.log(\"Transaction Echouée\")\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const removeTokenFromSale = async(tokenId)=>{\r\n        try {\r\n            let transaction = await mutate({\r\n                cadence: REMOVE_TOKEN_FROM_SALE,\r\n                limit: 100,\r\n                args: (arg, t) => [\r\n                    arg(tokenId, t.UInt64)\r\n                ]\r\n            })\r\n            console.log(\"TxID : \" + transaction)\r\n            await tx(transaction).onceSealed()\r\n            console.log(\"Transaction Effectuée\")\r\n        } catch (error) {\r\n            console.log(\"Transaction Echouée\")\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const listTokenForSale = async(tokenId, price)=>{\r\n        // pasage d'argument entiers pose problème ajoute une décimale null si c'est le cas\r\n        if(price%1==0) price+= \".0\"\r\n\r\n        try {\r\n            let transaction = await mutate({\r\n                cadence: LIST_TOKEN_FOR_SALE,\r\n                limit: 100,\r\n                args: (arg, t) => [\r\n                    arg(tokenId, t.UInt64),\r\n                    arg(price, t.UFix64)\r\n                ]\r\n            })\r\n            console.log(\"TxID : \" + transaction)\r\n            await tx(transaction).onceSealed()\r\n            console.log(\"Transaction Effectuée\")\r\n        } catch (error) {\r\n            console.log(\"Transaction Echouée\")\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const addToSellerCatalog = async()=>{\r\n        try {\r\n            let transaction = await mutate({\r\n                cadence: ADD_TO_SELLER_CATALOG,\r\n                limit: 100,\r\n                args: (arg, t) => []\r\n            })\r\n            console.log(\"TxID : \" + transaction)\r\n            await tx(transaction).onceSealed()\r\n            console.log(\"Transaction Effectuée\")\r\n        } catch (error) {\r\n            console.log(\"Transaction Echouée\")\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const removeFromSellerCatalog = async()=>{\r\n        try {\r\n            let transaction = await mutate({\r\n                cadence: REMOVE_FROM_SELLER_CATALOG,\r\n                limit: 100,\r\n                args: (arg, t) => []\r\n            })\r\n            console.log(\"TxID : \" + transaction)\r\n            await tx(transaction).onceSealed()\r\n            console.log(\"Transaction Effectuée\")\r\n        } catch (error) {\r\n            console.log(\"Transaction Echouée\")\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    return { \r\n        userSalelist, \r\n        sellerCatalog, \r\n        marketListings, \r\n        userIsSeller,\r\n        getCurrentUserSalelist, \r\n        setSellerCatalog, \r\n        listTokenForSale, \r\n        buyWordtoken, \r\n        removeTokenFromSale, \r\n        getTokenPrice, \r\n        getMarketListings, \r\n        addToSellerCatalog, \r\n        removeFromSellerCatalog, \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}